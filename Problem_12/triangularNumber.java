import java.util.*; 
import java.io.*;

class triangularNumber{  
    public static long triangularNumber() { 
	/*The sequence of triangle numbers is generated by adding the natural
	  numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6
	  + 7 = 28. The first ten terms would be: 1, 3, 6, 10, 15, 21, 28, 36,
	  45, 55, ...
	  Let us list the factors of the first seven triangle numbers:
	  1: 1
	  3: 1,3
	  6: 1,2,3,6
	  10: 1,2,5,10
	  15: 1,3,5,15
	  21: 1,3,7,21
	  28: 1,2,4,7,14,28
	  We can see that 28 is the first triangle number to have over five
	  divisors. What is the value of the first triangle number to have
	  over five hundred divisors?*/
       	long triangleNumber = 0;
	for(int i = 1; numDivisors(triangleNumber) <= 500;i++){
	    triangleNumber += i;
	    	}
  	return triangleNumber;
    } 

    public static int numDivisors(long num){
	int numDivisors = 0;
	for(int i = 1;i<= Math.sqrt(num);i++){
	    if(i == Math.sqrt(num) && num % Math.sqrt(num) == 0){
		numDivisors += 1;
	    } else if(i != Math.sqrt(num) && num % i == 0){
		numDivisors += 2;
	    }
	}
	return numDivisors;
    }
			
    public static void main (String[] args) { 
	System.out.println(triangularNumber());
    }   
}

